"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ynw%r6t5@)=uoz@os#k54f5tz(06w^5gr9)k95)ua3rdp1#a3k'
AIVEN_SERVICE_PASSWORD= 'AVNS_1YyoLCsZN4Ojj630rl4'


# Dropbox Storage Settings
DROPBOX_CLIENT_ID  = 'bmss0fq156sndxd'
DROPBOX_CLIENT_SECRET  = '2n2afrqw8g2cfbv'
DROPBOX_REFRESH_TOKEN = "tyMQj8_akrMAAAAAAAAAAVjZ5UsXKq8hLM6_KyjrJ4upTLOip2AoYtx66-IwdxI9"


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'whitenoise.runserver_nostatic',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'users',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Uncomment below for PostgreSQL production database
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'defaultdb',
#         'USER': 'avnadmin',
#         'PASSWORD': AIVEN_SERVICE_PASSWORD,
#         'HOST': 'test-pg0001-amgens-42ab.h.aivencloud.com',
#         'PORT': '24554',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# White listing the localhost:3000 port
# for React
CORS_ALLOW_ALL_ORIGINS = False  # Explicitly set to False for security
CORS_ORIGIN_WHITELIST = (
    "https://sabapplier.com",
    "http://sabapplier.com",
    "https://www.sabapplier.com",
    "http://www.sabapplier.com",
    'http://localhost:3000',
    'http://localhost:8000',
    'chrome-extension://*'
)
CORS_ALLOWED_ORIGINS = [
    "https://sabapplier.com",
    "http://sabapplier.com",
    "https://www.sabapplier.com",
    "http://www.sabapplier.com",
    "http://localhost:3000",
    "http://localhost:8000",
] 

CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^chrome-extension://[a-zA-Z0-9-]+$",  # More specific pattern for chrome extensions
    r"^http://localhost:.*$",    # if testing via localhost too
]

CORS_ALLOW_CREDENTIALS = True  # Allow cookies and authentication
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

CSRF_TRUSTED_ORIGINS = [
    "https://api.sabapplier.com",
    "http://api.sabapplier.com",
    "http://localhost:3000",
    "http://localhost:8000",
    "chrome-extension://*"
]  # Prevent CSRF issues


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URLS = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')





# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "sabapplierai100m@gmail.com"  # Your Gmail addresst
EMAIL_HOST_PASSWORD = "zuwu vzth lqgg owbw"  # App Password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Google OAuth Configuration
GOOGLE_CLIENT_ID = "1014179036736-d8et6ht2jf4kf9flcol0uv0ktv33v5fh.apps.googleusercontent.com"

# Django REST Framework Configuration
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Default to allow any for development
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [],  # No authentication required by default
}

# Cache configuration for OTP storage
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

print("Extension login view hit")